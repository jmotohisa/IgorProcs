#include <Strings as Lists>| LoadMRData3: load magnetoresistance data|   data column: B, Rxy, Rxx|Macro LoadMRData(fileName,pathName,index)	String fileName	String pathName="home"	Variable index		Silent 1; PauseUpDate		String B,Rxy,Rxx,w0	String w1,w2,w3		LoadWave/G/D/A/W/P=$pathName fileName	if(V_flag==0)		return	endif		B = GetStrFromList(S_waveNames,0,";")	Rxy = GetStrFromList(S_waveNames,1,";")	Rxx = GetStrFromList(S_waveNames,2,";")	w0 = GetStrFromList(S_waveNames,3,";")	|	KillWaves $w0	Sort $B, $B,$Rxy, $Rxx	SetScale d 0,0,"T",$B	SetScale d 0,0,"ohm",$Rxy,$Rxx	w1 = "B" + num2istr(index)	w2 = "Rxy" + num2istr(index)	w3 = "Rxx" + num2istr(index)	Rename $B,$w1	Rename $Rxy,$w2	Rename $Rxx,$w3EndMacro LoadAllMRData(pathName)	String pathName		Silent 1; PauseUpDate		String fileName	Variable index=0		if(strlen(pathName)==0)		NewPath/O temporaryPath		PathName = "temporaryPath"	endif		do		fileName = IndexedFile($pathName, index,"TEXT")		if(strlen(fileName)==0)			break		endif		LoadMRData(fileName,pathName,index)|		if(strlen(S_waveNames)>0)|		endif		index +=1	while(1)		if(Exists("temporaryPath"))		KillPath temporaryPath	endifEndMacro CalcMR(Rxx,Rxy,current)	String Rxx,Rxy	Variable current	Silent 1; PauseUpDate		$Rxx = $Rxx/current	$Rxy = $Rxy/current/25813EndMacro CalcAllMR(current)	Variable current	Silent 1; PauseUpDate		String Rxx,Rxy	Variable index=0		do		Rxx = "Rxx"+num2istr(index)		Rxy = "Rxy"+num2istr(index)		if(exists(Rxx)!=1)			break		endif		CalcMR(Rxx,Rxy,current)		index +=1	while(1)End