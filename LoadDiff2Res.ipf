#pragma rtGlobals=1		// Use modern global access method.#include <Strings as Lists>Macro initLoadDiff2Res()	String/G g_mwname="map",g_mrname="res"End MacroMacro LoadDiff2DRes(pathname,mwname,mrname)	String pathname="_New Path_"	String mwname=g_mwname,mrname=g_mrname	Prompt pathname,"path name",popup,PathList("*", ";", "")+"_New Path_"		Silent 1; PauseUpDate		String w0,buffer	String mw1=mwname+"_1",mw2=mwname+"_2"	String rw1=mrname+"_1",rw2=mrname+"_2"	Variable ref,nnx,nx1,dx1,nx2,dx2,nny,ny1,dy1	g_mwname=mwname	g_mrname=mrname		if (CmpStr(pathname, "_New Path_") == 0)		| user selected new path ?		NewPath/O diff			| this brings up dialog and creates or overwrites path		pathname = "diff"	endif		Open /R/P=$pathname/T="TEXT" ref as "meshdata"	if(V_flag==0)		Close ref		return	endif	FReadLine ref,buffer	FReadLine ref,buffer	nx1 = str2num(GetStrFromList(buffer,0,"\t"))	dx1 = str2num(GetStrFromList(buffer,1,"\t"))	nx2 = str2num(GetStrFromList(buffer,2,"\t"))	dx2 = str2num(GetStrFromList(buffer,3,"\t"))	print nx1,dx1,nx2,dx2	FReadLine ref,buffer	FReadLine ref,buffer	ny1 = str2num(GetStrFromList(buffer,0,"\t"))	dy1 = str2num(GetStrFromList(buffer,1,"\t"))	print ny1,dy1	Close ref	LoadWave/G/M/D/A/W/P=$pathName "map"	if(V_flag==0)		return	endif		w0 = GetStrFromList(S_waveNames,0,";")	print w0	rename $w0,$mw1	Duplicate $mw1,$mw2	LoadWave/G/M/D/A/W/P=$pathName "res"	if(V_flag==0)		return	endif	w0 = GetStrFromList(S_waveNames,0,";")	rename $w0,$rw1	Duplicate $rw1,$rw2		ScaleRes(mwname,mrname,dx1,dx2,dy1,nx1,nx2,1)End MacroMacro DispRes(mwname,mrname)	String mwname=g_mwname,mrname=g_mrname	Silent 1; PauseUpDate		String mw1=mwname+"_1",mw2=mwname+"_2"	String rw1=mrname+"_1",rw2=mrname+"_2"	g_mwname=mwname	g_mrname=mrname		Display /W=(468,65,748,499)	AppendMatrixContour $rw1	AppendMatrixContour $rw2	AppendImage $mw1	AppendImage $mw2	ModifyImage $mw1 ctab= {*,3,Grays,1}	ModifyImage $mw2 ctab= {*,3,Grays,1}	ModifyGraph margin(top)=57,margin(right)=57,width=170,height=340	SetAxis bottom 0,1e-05	Textbox/N=text0/F=0/A=MC/X=-34.12/Y=43.82 "L=300nm\rR=600nm\rn=5"	Textbox/N=text1/F=0/A=MC/X=57.29/Y=-46.17 "x"	Textbox/N=text2/F=0/A=MC/X=-46.18/Y=54.68 "y"	SetDrawLayer UserFront	SetDrawEnv xcoord= bottom,ycoord= prel,arrow= 1	DrawLine 0,0.0234042553191489,0,-0.106382978723404	SetDrawEnv xcoord= prel,ycoord= left,arrow= 1	DrawLine 0.961805555555556,0,1.14583333333333,0End MacroMacro ScaleRes(mwname,mrname,dx1,dx2,dy,nx1,nx2,tflag)	String mwname=g_mwname,mrname=g_mrname	variable/D dx1,dx2,dy,nx1,nx2,tflag=1	Prompt mwname "map data wave name"	Prompt mrname "result wava name"	Prompt dx1,"dx1"	Prompt dx2,"dx1"	Prompt dy,"dy"	Prompt nx1,"nx1"	Prompt nx2,"nx2"	prompt tflag,"transpose ?",popup,"yes;no"		Silent 1; PauseUpDate	g_mwname=mwname	g_mrname=mrname		String mw1=mwname+"_1",mw2=mwname+"_2"	String rw1=mrname+"_1",rw2=mrname+"_2"	Variable dx2st=dx1*nx1		if(tflag==1)		MatrixTranspose $mw1		MatrixTranspose $mw2		MatrixTranspose $rw1		MatrixTranspose $rw2	endif	DeletePoints nx1+1,nx2-nx1, $mw1,$rw1	DeletePoints 0,nx1, $mw2,$rw2	SetScale/P x 0,dx1,"m",$mw1,$rw1	SetScale/P y 0,dy,"m",$mw1,$rw1	SetScale/P x dx2st,dx2,"m",$mw2,$rw2	SetScale/P y 0,dy,"m",$mw2,$rw2End Macro