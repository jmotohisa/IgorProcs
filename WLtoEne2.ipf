#include <Execute Cmd on List>#include <String Substitution>Macro WLtoE(wname1)	String wname1	Prompt wname1,"wave name",popup,WaveList("W*",";","")	PauseUpdate;Silent 1		String wname2=wname1,srcPat="W",destPat="e"	wname2[0,0]="e"|	StrSubstitute(srcPat,wname2,destPat)|	Print wname1,wname2	Duplicate $wname1,$wname2	$wname2=1239.8/xEndMacro AppendEvsI(wname1,horizAxis,vertAxis)	String wname1,	Prompt wname1,"wave name",popup,WaveList("W*",";","")	Prompt horizAxis,"horizontal Axis",popup,AxisList("")	Prompt vertAxis,"horizontal Axis",popup,AxisList("")	PauseUpdate;Silent 1		String wname2=wname1	wname2[0,0]="e"	AppendToGraph/B=$horizAxis/L=$vertAxis $wname1 vs $wname2EndMacro ModGraphWLtoE(grname)	String grname=WinName(0, 1)	Prompt grname,"Graph to create multiple axes",popup,WinList("*",";","WIN:1")	PauseUpdate; Silent 1		String w0,w0_e,Xaxis,Yaxis,Xaxis_old="left"	String origWaveList=WaveList("W*",";","WIN:"+grname)	String rcr,rcr2,srcPat="(x)",destPat|	String origAxisList=AxisList(grname)	Variable index=0,slen	DoWindow/C $grname		do		w0 = GetStrFromList(origWaveList,index,";")		if(strlen(w0)==0)			break		endif				w0_e=w0		w0_e[0,0]="e"		if(strlen(WaveList(w0_e,";",""))==0)			Duplicate $w0,$w0_e			$w0_e=1239.8/x		endif				Xaxis=XAxisOfWave(grname,w0,0)		Yaxis=YAxisOfWave(grname,w0,0)		rcr=recrstring(grname,w0,0)		destPat="("+w0+"#"+num2istr(1)+")"//		print srcPat,rcr,destPat		rcr2=StrSubstitute(srcPat,rcr,destPat)//		slen=strlen(rcr2)//		rcr2[slen-1,slen-1]=""//		Print rcr2		AppendToGraph/B=$Xaxis/L=$Yaxis $w0 vs $w0_e//		ExecuteCmdOnList ("ModifyGraph ",rcr)		RemoveFromGraph $w0#0		if(cmpstr(Xaxis,Xaxis_old)!=0)			GetAxis/Q $Xaxis // ;xmin=V_min;xmax=y_max			SetAxis $Xaxis,1239.8/V_max,1239.8/V_min			Xaxis_old=Xaxis		endif		index+=1	while(1)EndFunction/S recrstring(gr,wv,instance)	String gr,wv	Variable instance		String info=TraceInfo(gr,wv,instance)	String key=";RECREATION:",rcr,srcPat="x",destPat	Variable st,en,rcrval		st = strsearch(info,key,0)	st +=strlen(key)	en=strlen(info)	rcr= info[st,en]	Return rcrEnd