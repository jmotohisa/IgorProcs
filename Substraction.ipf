#include <Strings as Lists>Macro Init_Subsruction(graphName,waveName)| macro for initialization of wave substruction	String graphName,waveName="SubstData"	Prompt graphName,"Graph Name",popup,WinList("*",";","WIN:1")	Prompt waveName,"Wave name for store substuction values"	Silent 1; PauseUpDate	Variable/G g_nwave	String/G g_wavelists,g_SubstWName,g_graphName		Variable index=0	String wv0,wavelists		g_wavelists = WaveList("*",";","WIN:"+graphName)	do		wv0 = GetStrFromList(g_wavelists,index,";")		if(strlen(wv0)==0)			break		endif		index+=1	while(1)		Make /D/O/N=(index) $waveName		g_nwave = index	g_SubstWName = waveNameEnd MacroMacro Do_Subsruction(instance)	Variable instance=0	Prompt instance,"instance"		Silent 1; PauseUpDate		Variable index =0	Variable/D offset	String wv0		do		wv0 = GetStrFromList(g_wavelists,index,";")		if(strlen(wv0)==0)			break		endif		offset = $(wv0)[instance]		$(g_SubstWName)[index] = offset		$wv0 -= offset		index+=1	while(1)End MacroMacro Restore_substruction()	Silent 1; PauseUpDate	Variable/D offset	Variable index = 0	String wv0	do		wv0 = GetStrFromList(g_wavelists,index,";")		if(strlen(wv0)==0)			break		endif		offset = $g_SubstWName[index]		$wv0 += offset		$g_SubstWName[index] = 0		index+=1	while(1)End Macro