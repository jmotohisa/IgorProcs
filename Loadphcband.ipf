#pragma rtGlobals=1		// Use modern global access method.// LoadDelftData.ipf// by J. Motohisa// load single and multiple data saved by "MeasureDelft" program//// requires: "wname","MatrixOperations2"//		note: MatrixOperations2 requires "JEG Tools" (http://www.his.com/jguyer/)// 2000/11/?? ver 0.01: first version @delft// ... many revisions// 2005/01/08 ver 0.2 : #include <Strings as Lists>#include "wname"#include "MatrixOperations2"Macro Loadphcband(fileName,pathName,wantToDisp)	String fileName	String pathName="home"	Variable wantToDisp=2	Prompt wantToDisp, "Do you want to display graphs?", popup, "Yes;No"	Silent 1; PauseUpDate		String dwname,kxwv,kywv,destw,destw0	Variable ref	Variable index		if (strlen(fileName)<=0)		if(CmpStr(IgorInfo(2), "Macintosh") == 0)//			Open /D/R/P=$pathName/T="sGBWTEXT" ref // MacOS			Open /D/R/P=$pathName/T=".DAT" ref // windows		else			Open /D/R/P=$pathName/T=".DAT" ref // windows		endif		fileName= S_fileName		print filename	endif	LoadWave/J/D/W/K=0/N=$"dummy"/W/P=$pathName/Q fileName	if(V_flag==0)		return	endif//	print S_wavenames	//	destw0=strrpl(wname(fileName),"-","_")	if(wantToDisp==1)		Display /W=(3,41,636,476)	endif	destw0=wname(fileName)	kxwv=StringFromList(2,S_waveNames,";")	kywv=StringFromList(3,S_waveNames,";")	Duplicate/O $kxwv,$(destw0+"_kx")	Duplicate/O $kywv,$(destw0+"_ky")	index=4	do		dwname = StringFromList(index,S_waveNames,";")		if(strlen(dwname)==0)			break		endif//			SetScale/I x,V_min,V_max,"V",$ywname//			SetScale y,0,1,"A",$ywname		destw=destw0+"_"+num2istr(index-4)		Duplicate/O $dwname,$destw		Append $destw		index+=1	while(1)	//	if(wantToDisp==1)//		Legend/N=text0/F=0/A=MC/X=-38.04/Y=39.31//		Label left "Current (\\U)"//		Label bottom "Voltage (\\U)"//	endif	//	if(convMat==1 %& numdat==1)//		WavesToMatrix(destw0+"_","M"+destw0,0,index1,1)//	endifEndMacro LoadphcbandAll(pathName,wantToDisp)	String pathName="_New Path_"	Variable wantToDisp=1	Prompt pathName, "Name of path containing text files", popup PathList("*", ";", "")+"_New Path_"	Prompt wantToDisp, "Do you want to display graphs?", popup, "Yes;No"	Silent 1; PauseUpDate		String fileName,ftype	Variable index=0	if(CmpStr(IgorInfo(2), "Macintosh") == 0)//		ftype="TEXT"		ftype=".DAT"	else		ftype=".DAT"	endif	if (CmpStr(PathName, "_New Path_") == 0)		// user selected new path ?		NewPath/O data			// this brings up dialog and creates or overwrites path		PathName = "data"	endif		do		fileName = IndexedFile($pathName, index,ftype)		if(strlen(fileName)==0)			break		endif		Print "loding file ",filename		 Loadphcband(fileName,pathName,wantToDisp)		index+=1	while(1)		if(Exists("temporaryPath"))		KillPath temporaryPath	endifEndMacro MakePeriodicZone(wv1,rep)	String wv1	Variable rep=3	Silent 1; PauseUpDate	if(rep==1)		return	endif	string wv1temp1=wv1+"_temp1",wv1temp2=wv1+"_temp2"	Variable nx=DimSize($wv1,0),index,index1,rep2	Duplicate/O $wv1,$wv1temp1,$wv1temp2	$wv1temp2=x	Sort/R $wv1temp2,$wv1temp2,$wv1temp1//	$wv1temp2=$wv1// step 1: 	Redimension/N=(nx*2-1) $wv1	index=0	do		$wv1[index+nx]=$wv1temp1[index+1]		index+=1	while(index<nx-1)		if(rep==2)		return	endif// step 2:	rep2 = ceil(rep/2)*2	Duplicate/O $wv1,$wv1temp1	Redimension/N=((nx-1)*rep2+1) $wv1	index1=nx*2-1	if(1)	do		index=0		do			$wv1[index1+index]=$wv1temp1[index+1]			index+=1		while(index<2*nx-1)		index1+=2*nx-1	while(index1<(nx-1)*rep2+1)// step 3:	Redimension/N=((nx-1)*rep+1) $wv1	KillWaves $wv1temp1,$wv1temp2		endifEnd	