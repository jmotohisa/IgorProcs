#pragma rtGlobals=1		// Use modern global access method.// LoadDelftData.ipf// by J. Motohisa// load single and multiple data saved by "MeasureDelft" program//// requires: "wname","MatrixOperations2"//		note: MatrixOperations2 requires "JEG Tools" (http://www.his.com/jguyer/)// 2000/11/?? ver 0.01: first version @delft// ... many revisions// 2005/01/08 ver 0.2 : // 2007/04/27: strrpl is now in another procedure#include <Strings as Lists>#include "wname"#include "StrRpl"#include "MatrixOperations2"Macro LoadDelftData(fileName,pathName,scalex,scaley,numdat,wantToDisp,convMat,iformat)	String fileName	String pathName="home"	Variable scalex=1e6,scaley=1e12,wantToDisp=2,convMat=2,numdat=1,iformat=3	Prompt wantToDisp, "Do you want to display graphs?", popup, "Yes;No"	Prompt convMat, "Do you want to convert into Matrix?", popup, "Yes;No"	Prompt numdat,"Number of measurement per each scan"	Prompt iformat,"data format",popup,"Delft;Hokudai;Hokudai new"	Silent 1; PauseUpDate		String dwname,xwname,ywname,destw,destw0,wnames,cmdstr,buffer	Variable ref	Variable index,index1,index2		if (strlen(fileName)<=0)		if(CmpStr(IgorInfo(2), "Macintosh") == 0)//			Open /D/R/P=$pathName/T="sGBWTEXT" ref // MacOS			Open /D/R/P=$pathName/T=".DAT" ref // windows		else			Open /D/R/P=$pathName/T=".DAT" ref // windows		endif		fileName= S_fileName		print filename	endif		if(iformat==3)		Open /R/P=$pathName/T="TEXT" ref as fileName		FReadLine ref,buffer		numdat = str2num(buffer)	endif	LoadWave/G/D/N=$"dummy"/W/P=$pathName/Q fileName	if(V_flag==0)		return	endif//	print S_wavenames		destw0=strrpl(wname(fileName),"-","_")	index=0	index1=0	if(wantToDisp==1 %& convMat ==2)		Display /W=(3,41,636,476)	endif	do		dwname = GetStrFromList(S_waveNames,index,";")		if(strlen(dwname)==0)			break		endif		xwname=GetStrFromList(S_waveNames,index+1,";")		$xwname /=scalex		index2=0		wnames=""		do			if(index2==numdat)				break			endif			ywname=GetStrFromList(S_waveNames,index+2+index2,";")			$ywname /=scaley			wnames=wnames+","+ywname			index2+=1		while(1)		cmdstr="Sort "+xwname+","+xwname+wnames		Execute cmdstr		WaveStats/Q $xwname		index2=0		do			if(index2==numdat)				break			endif			ywname=GetStrFromList(S_waveNames,index+2+index2,";")			SetScale/I x,V_min,V_max,"V",$ywname			SetScale y,0,1,"A",$ywname			if(numdat==1)				destw=destw0+"_"+num2istr(index1)				Duplicate/O $ywname,$destw			else				destw=destw0+"_"+num2istr(index2)+"_"+num2istr(index1)				Duplicate/O $ywname,$destw			endif						if(wantToDisp==1 %& convMat ==2)				Append $destw			endif			index2+=1		while(1)		index+=2+numdat		index1+=1	while(1)		if(wantToDisp==1 %& convMat ==2)		Legend/N=text0/F=0/A=MC/X=-38.04/Y=39.31		Label left "Current (\\U)"		Label bottom "Voltage (\\U)"		ColorWaves()	endif		if(convMat==1 %& numdat==1)		WavesToMatrix(destw0+"_","M"+destw0,0,index1,1)	endifEndMacro LoadDelftDataAll(pathName,scalex,scaley,numdat,wantToDisp,convmat,iformat)	Variable scalex=1e6,scaley=1e12	String pathName="_New Path_"	Variable wantToDisp=1,iformat=3,convmat=2,numdat=1	Prompt pathName, "Name of path containing text files", popup PathList("*", ";", "")+"_New Path_"	Prompt wantToDisp, "Do you want to display graphs?", popup, "Yes;No"	Prompt convMat, "Do you want to convert into Matrix?", popup, "Yes;No"	Prompt numdat,"Number of measurement per each scan"	Prompt iformat,"data format",popup,"Delft;Hokudai;Hokudai new"	Silent 1; PauseUpDate		String fileName,ftype	Variable index=0	if(CmpStr(IgorInfo(2), "Macintosh") == 0)//		ftype="TEXT"		ftype=".DAT"	else		ftype=".DAT"	endif	if (CmpStr(PathName, "_New Path_") == 0)		// user selected new path ?		NewPath/O data			// this brings up dialog and creates or overwrites path		PathName = "data"	endif		do		fileName = IndexedFile($pathName, index,ftype)		if(strlen(fileName)==0)			break		endif		Print "loding file ",filename		 LoadDelftData(fileName,pathName,scalex,scaley,numdat,wantToDisp,convmat,iformat)		index+=1	while(1)		if(Exists("temporaryPath"))		KillPath temporaryPath	endifEndMacro PrintDelftDataComment(filename,pathname)	String fileName	String pathName="home"//	Variable scalex=1e6,scaley=1e12,wantToDisp=1,convMat=2//	Prompt wantToDisp, "Do you want to display graphs?", popup, "Yes;No"//	Prompt convMat, "Do you want to convert into Matrix?", popup, "Yes;No"	Silent 1; PauseUpDate	String dwname,xwname,ywname,destw,destw0,cmt,dummy	Variable ref	Variable index,index1		if (strlen(fileName)<=0)		Open /D/R/P=$pathName/T="sGBWTEXT" ref		fileName= S_fileName	endif		print filename	Open /R/P=$pathName/T="sGBWTEXT" ref as fileName	FReadLine ref,dummy	print dummy	index=1	do		cmt=FindScanNum(ref,index)		if(strlen(cmt)==0)			break		endif		print cmt		index+=1	while(1)	close refEnd		Function/T FindScanNum(fileVar,scanNum)	// search for start of scan	Variable fileVar		// file ref number	Variable scanNum		// scan number to find	if (scanNum<0)		return ""	endif	String search = "-"+num2istr(scanNum)+"L"	String buffer=" "		// set up large buffer for reading data file	Variable bufSize=5e5	Variable Nread=strlen(search)+bufSize	buffer = PadString(buffer, Nread, 0)	FStatus fileVar	Variable fpos0=V_filePos	Variable more=1,i,j=-bufSize	do		j += bufSize		FSetPos fileVar, (j+fpos0)		FStatus fileVar		if ((V_logEOF-V_filePos)<Nread)	// not enough data to fill buffer			buffer = ""			buffer = PadString(buffer,V_logEOF-V_filePos, 0)			more = 0		endif		FBinRead fileVar, buffer	// read next buffer full of data		i = strsearch(buffer, search, 0)// check	while ((i<0) %& more)			// continue if not found and more data in file	if (i<0)				// not found		return ""	endif	FSetPos fileVar, (i+j+fpos0)	String line=" "	FReadLine fileVar, line	return lineEndMacro DisplayDelftData(wname)	String wname="_"	Prompt wname,"Starting Strings of the wave name"	Silent 1;PauseUpdate		String wn0	Variable index=0	Display /W=(3,41,636,476)		do		wn0=wname+num2istr(index)		if(waveExists($wn0)==0)			break		endif		Append $wn0		index+=1	while(1)EndMacroMacro ColorWaves() : GraphStyle	Silent 1;PauseUpdate	Modify/Z minor(bottom)=1	Modify/Z rgb[0]=(65535,0,0)	Modify/Z rgb[1]=(0,0,65535),rgb[2]=(3009,65535,1882),rgb[3]=(0,0,0)	Modify/Z rgb[4]=(0,0,65535),rgb[5]=(63953,3661,65535)	Modify/Z rgb[6]=(37510,1,1),rgb[7]=(27232,40528,22540),rgb[8]=(1531,1314,28456)	Modify/Z mode=4	Modify/Z marker[0] = 11,mode=4,marker[1] = 12,mode=4,marker[2] = 13	Modify/Z marker[3] = 14,mode=4,marker[4] = 15,mode=4,marker[5] = 16	Modify/Z marker[6] = 17,mode=4,marker[7] = 18,mode=4,marker[8] = 19EndMacro ResetColorWaves() : GraphStyle	Silent 1;PauseUpdate	Modify/Z minor(bottom)=1	Modify/Z rgb=(65535,0,0)	Modify/Z mode=0EndMacro KillDummyWaves()	Silent 1;PauseUpdate	Variable index=0	String dummy	do		dummy="dummy"+num2istr(index)		if(waveExists($dummy)==0)			break		endif		KillWaves $dummy		index+=1	while(1)EndMacro