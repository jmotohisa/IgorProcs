// DuplicatePlus.ipf//	04/11/06 ver. 0.2 by J. Motohisa//// some useful macros for data analysis// most the macro works on the waves displayed in the graph////	revision history//		before 04/11/06	ver 0.1 originally named as DuplicatePlusMacro Normalize(grName)	String grName	Prompt grName,"Graph Name",popup,WinList("*",";","WIN:1")	Silent 1;PauseUpdate		String tracenames=TraceNameList(grName, ";", 1),wv0	Variable index=0	DoWindow/F grName	do		wv0=GetStrFromList(tracenames,index,";")		if(strlen(wv0)==0)			break		endif		WaveStats/Q $wv0		print wv0,V_max		$wv0=$wv0/V_max		index+=1	while(1)EndMacro Dup(grName,waveName)| duplicate and smooth waves	String grName,waveName	Prompt grName,"Graph Name",popup,WinList("*",";","WIN:1")	Prompt waveName,"Wave name to duplicate, smooth, and replace",popup,WaveList("R*", ";", "WIN:"+grName)	Silent 1; PauseUpDate		String tmp,str,xwave,yaxis=YAxisOfWave(grName,waveName,0)	tmp = "d" + waveName	duplicate/O $waveName,$tmp	//	Smooth 5,$tmp//	WaveStats/Q $tmp//	$tmp = $tmp/V_max		xwave = XWaveName("",waveName)	if(strlen(xwave)==0)		Append $tmp//		AppendToGraph/L=yaxis $tmp	else		Append $tmp vs $xwave//		AppendToGraph/L=yaxis $tmp vs $xwave	endif	RemoveFromGraph $waveName	//	ShowInfoEnd MacroMacro DupAll(graphName)// duplicate and normalize all waves in the graph	String graphName=WinName(0, 1)	Prompt graphName,"graphs to smooth",popup,WinList("*",";","WIN:1")		PauseUpdate; Silent 1	String wv0,wavelists = TraceNameList(graphname, ";", 1)	Variable index=0	DoWindow/F graphName	do		wv0=GetStrFromList(wavelists,index,";")		if(strlen(wv0)==0)			break		endif		Dup(graphName,wv0)		index+=1	while(1)End MacroMacro DupAndSm(grName,waveName)| duplicate and smooth waves	String grName,waveName	Prompt grName,"Graph Name",popup,WinList("*",";","WIN:1")	Prompt waveName,"Wave name to duplicate, smooth, and replace",popup,WaveList("R*", ";", "WIN:"+grName)	Silent 1; PauseUpDate		String tmp,str,xwave,yaxis=YAxisOfWave(grName,waveName,0)	tmp = waveName + "_2"	duplicate/O $waveName,$tmp		Smooth 5,$tmp|	WaveStats/Q $tmp|	$tmp = $tmp/V_max		xwave = XWaveName("",waveName)	if(strlen(xwave)==0)		Append $tmp|		AppendToGraph/L=yaxis $tmp	else		Append $tmp vs $xwave|		AppendToGraph/L=yaxis $tmp vs $xwave	endif	RemoveFromGraph $waveName		ShowInfoEnd MacroMacro DupAndSmAll(graphName)| duplicate and normalize all waves in the graph	String graphName=WinName(0, 1)	Prompt graphName,"graphs to smooth",popup,WinList("*",";","WIN:1")		PauseUpdate; Silent 1	String wv0,wavelists = TraceNameList(graphname, ";", 1)	Variable index=0	DoWindow/F graphName	do		wv0=GetStrFromList(wavelists,index,";")		if(strlen(wv0)==0)			break		endif		DupAndSm(graphName,wv0)		index+=1	while(1)End MacroMacro DupAndNorm(grName,waveName)| duplicate, and normalize waves	String grName,waveName	Prompt grName,"Graph Name",popup,WinList("*",";","WIN:1")|	Prompt waveName,"Wave name to duplicate and Normalize",popup,WaveList("C*", ";", "WIN:"+grname)	Prompt waveName,"Wave name to duplicate and Normalize",popup,TraceNameList(grname, ";", 1)	Silent 1; PauseUpDate		String tmp,str,xwave		tmp = waveName + "_norm"	duplicate/O $waveName,$tmp|	WaveStats/Q $tmp|	print V_max|	$tmp = $tmp/V_max	$tmp = $tmp/$waveName[0]		xwave = XWaveName("",waveName)	if(strlen(xwave)==0)		Append $tmp|		AppendToGraph/L=yaxis $tmp	else		Append $tmp vs $xwave|		AppendToGraph/L=yaxis $tmp vs $xwave	endif	RemoveFromGraph $waveName		ShowInfoEnd MacroMacro DupAndNorm2(grName,waveName,value)| duplicate, and normalize waves	String grName,waveName	Variable value=1/25813*5e-6	Prompt grName,"Graph Name",popup,WinList("*",";","WIN:1")|	Prompt waveName,"Wave name to duplicate and Normalize",popup,WaveList("C*", ";", "WIN:"+grname)	Prompt waveName,"Wave name to duplicate and Normalize",popup,TraceNameList(grname, ";", 1)	Prompt value,"value to normalize"	Silent 1; PauseUpDate		String tmp,str,xwave		tmp = waveName + "_norm"	duplicate/O $waveName,$tmp|	WaveStats/Q $tmp|	print V_max|	$tmp = $tmp/V_max	$tmp = $tmp/value		xwave = XWaveName("",waveName)	if(strlen(xwave)==0)		Append $tmp|		AppendToGraph/L=yaxis $tmp	else		Append $tmp vs $xwave|		AppendToGraph/L=yaxis $tmp vs $xwave	endif	RemoveFromGraph $waveName	|	ShowInfoEnd MacroMacro DupAndNormAll2(graphName,value)| duplicate and normalize all waves in the graph	String graphName=WinName(0, 1)	Variable value=1/25813*5e-6	Prompt graphName,"graphs to duplicate and normalize",popup,WinList("*",";","WIN:1")	Prompt value,"value to normalize"		PauseUpdate; Silent 1	String wv0,wavelists = TraceNameList(graphname, ";", 1)	Variable index=0	DoWindow/F graphName	do		wv0=GetStrFromList(wavelists,index,";")		if(strlen(wv0)==0)			break		endif		DupAndNorm2(graphname,wv0,value)		index+=1	while(1)End MacroMacro DuplicateAll(graphName)| duplicate and normalize all waves in the graph	String graphName=WinName(0, 1)	Prompt graphName,"graphs to normalize",popup,WinList("*",";","WIN:1")		PauseUpdate; Silent 1	String wv0,wavelists = WaveList("*",";","WIN:"+graphName)	Variable index=0	DoWindow/F graphName	do		wv0=GetStrFromList(wavelists,index,";")		if(strlen(wv0)==0)			break		endif		Duplicate/O $wv0,$(wv0+"_2")		index+=1	while(1)End MacroMacro DuplicateAndNormIntAll(graphName)| duplicate and normalize all waves in the graph	String graphName=WinName(0, 1)	Prompt graphName,"graphs to normalize",popup,WinList("*",";","WIN:1")		PauseUpdate; Silent 1	String wv0,wavelists = WaveList("*",";","WIN:"+graphName)	Variable index=0	variable tmp	DoWindow/F graphName	do		wv0=GetStrFromList(wavelists,index,";")		if(strlen(wv0)==0)			break		endif		Duplicate/O $wv0,$(wv0+"_2")		$(wv0+"_2") *=(1e7*32768)		Redimension/I $(wv0+"_2")		WaveStats/Q $(wv0+"_2")		tmp = V_min		$(wv0+"_2") -=tmp		index+=1	while(1)End MacroMacro DivideAll(graphName,dividor)| all the waves in the graph is divided by some value 	String graphName=WinName(0, 1)	Variable/D dividor=1	Prompt graphName,"graphs to normalize",popup,WinList("*",";","WIN:1")	Prompt dividor,"dividor"		PauseUpdate; Silent 1	String wv0,wavelists = WaveList("*",";","WIN:"+graphName)	Variable index=0	DoWindow/F graphName	do		wv0=GetStrFromList(wavelists,index,";")		if(strlen(wv0)==0)			break		endif		$wv0 /= dividor		index+=1	while(1)End MacroMacro MultiplyAll(graphName,multiplyer)| all the waves in the graph is multiplied by some value 	String graphName=WinName(0, 1)	Variable/D multiplyer=1	Prompt graphName,"graphs to normalize",popup,WinList("*",";","WIN:1")	Prompt multiplyer,"multiplyer"		PauseUpdate; Silent 1	String wv0,wavelists = WaveList("*",";","WIN:"+graphName)	Variable index=0	DoWindow/F graphName	do		wv0=GetStrFromList(wavelists,index,";")		if(strlen(wv0)==0)			break		endif		$wv0 *= multiplyer		index+=1	while(1)End MacroMacro AddAll(graphName,value)| add a value to all the waves in the graph	String graphName=WinName(0, 1)	Variable/D value=0	Prompt graphName,"graphs to normalize",popup,WinList("*",";","WIN:1")	Prompt value,"value to add"		PauseUpdate; Silent 1	String wv0,wavelists = WaveList("*",";","WIN:"+graphName)	Variable index=0	DoWindow/F graphName	do		wv0=GetStrFromList(wavelists,index,";")		if(strlen(wv0)==0)			break		endif		$wv0 += value		index+=1	while(1)End MacroMacro DupAndDiff(grName,waveName)| duplicate and smooth waves	String grName,waveName	Prompt grName,"Graph Name",popup,WinList("*",";","WIN:1")	Prompt waveName,"Wave name to duplicate, smooth, and replace",popup,WaveList("R*", ";", "WIN:"+grName)	Silent 1; PauseUpDate		String tmp,str,xwave,yaxis=YAxisOfWave(grName,waveName,0)	tmp = waveName + "_2"	Duplicate/O $waveName,$tmp	Differentiate $tmp		Smooth 5,$tmp|	WaveStats/Q $tmp|	$tmp = $tmp/V_max		xwave = XWaveName("",waveName)	if(strlen(xwave)==0)		Append $tmp|		AppendToGraph/L=yaxis $tmp	else		Append $tmp vs $xwave|		AppendToGraph/L=yaxis $tmp vs $xwave	endif	RemoveFromGraph $waveName		ShowInfoEnd MacroMacro DupAndDiffAll(graphName)| duplicate and normalize all waves in the graph	String graphName=WinName(0, 1)	Prompt graphName,"graphs to smooth",popup,WinList("*",";","WIN:1")		PauseUpdate; Silent 1	String wv0,wavelists = TraceNameList(graphname, ";", 1)	Variable index=0	DoWindow/F graphName	do		wv0=GetStrFromList(wavelists,index,";")		if(strlen(wv0)==0)			break		endif		DupAndDiff(graphName,wv0)		index+=1	while(1)End Macro