#pragma rtGlobals=1		// Use modern global access method.// LoadSPEData.ipf// by J. Motohisa// Macro to load SPE data (version 1.7) stored with WinSpec or WinX //      (SPC file with extention of "SPE")//// requires: "wname.ipf","GraphPlot.ipf", "JMGraphStyles.ipf"// 2000/11/?? ver 0.01: first version// ... many revisions// 2005/01/31 ver 0.2 : #include <Strings as Lists>#include "wname"#include "GraphPlot"#include "JMGraphStyles"Macro SPEload(name,file,path)	String name,file	String path="home"	PauseUpdate; Silent 1		Variable /D ref,npoint,datatype,n_poly,dtype,skip,xmin,xmax	Variable ROIinfo,startx,endx,groupx,starty,endy,groupy	String xname,extstr	variable IgorVersion		if (strlen(file)<=0)		if(CmpStr(IgorInfo(2), "Macintosh") == 0)			extstr=".SPE"			Open /D/R/P=$path/T=".SPE" ref // MacOS		else			extstr=".SPE"			Open /D/R/P=$path/T=".SPE" ref // windows		endif		fileName= S_fileName		print file	endif		Open /R/P=$path/T=(extstr) ref as file	FsetPos ref,42	FBinRead /B=3/F=2/U ref,npoint	FsetPos ref,108	FBinRead /B=3/F=2 ref,datatype		FsetPos ref,1510	FBinRead/B=3/F=2 ref,ROIinfo	if(ROIinfo==0)		ROIinfor=1	endif	FSetPos ref,1512+(ROIinfo-1)*12	FBinRead /B=3/F=2/U ref,startx	FBinRead /B=3/F=2/U ref,endx	FBinRead /B=3/F=2/U ref,groupx	FBinRead /B=3/F=2/U ref,starty	FBinRead /B=3/F=2/U ref,endy	FBinRead /B=3/F=2/U ref,groupy	FSetPos ref,3101	FBinRead /B/F=1 ref,n_poly	Close ref//	print npoint,datatype,n_poly//	print ROIinfo,startx,endx,groupx,starty,endy,groupy//	GBLoadWave/Q/N=$"coef"/T={4,4}/B/U=6/S=3263/W=1/P=$path file	skip=4100	print datatype	if(datatype==0)		dtype= 2	else		if(datatype==1)			dtype= 32		else			if(datatype==2)				dtype= 16			else				if(datatype==3)					dtype= 16+64				endif			endif		endif	endif	print dtype	GBLoadWave /N=$"dummyywave"/T={(dtype),4}/B/U=(npoint)/S=(skip)/W=1/P=$path file	Duplicate/O dummyywave0,dummyxwave0	SetScale/P x startx,1,"", dummyxwave0	dummyxwave0=poly(coef0, x)	Wavestats/Q dummyxwave0	xmin=V_min	xmax=V_max	if (strlen(name)<1)		name="W"+wname(file)		xname="L"+wname(file)	endif		SetScale/I x xmin,xmax,"",dummyywave0	duplicate /O dummyywave0,$name	duplicate /O dummyxwave0,$xnameEndMacro MultiSPELoad(thePath, wantToPrint,flag)	String thePath="_New Path_"	Prompt thePath, "Name of path containing text files", popup PathList("*", ";", "")+"_New Path_"	Variable wantToPrint=2	Prompt wantToPrint, "Do you want to print graphs?", popup, "Yes;No"	Variable flag=1	Prompt flag,"swap wavelength ?",popup,"no;yes"		Silent 1		String fileName,ftype	Variable fileIndex=0, gotFile	String xname	//	ftype=FileTypeStr()	ftype=".spe"	if (CmpStr(thePath, "_New Path_") == 0)		// user selected new path ?		NewPath/O data			// this brings up dialog and creates or overwrites path		thePath = "data"	endif		DoWindow /F Graphplotxy							// make sure Graphplot is front window	if (V_flag == 0)								// Graphplot does not exist?		Make/N=2/D/O dummyxwave0		Make/N=2/D/O dummyywave0		Graphplotxy()									// create it	endif		do		fileName = IndexedFile($thePath,fileIndex,ftype)			// get name of next file in path		gotFile = CmpStr(fileName, "")		if (gotFile)			SPEload("",fileName,thePath)			// LoadWave/G/P=$thePath/O/N=wave fileName		// load the waves from file			Textbox/C/N=tb_file/F=0/A=MT/X=-30/Y=5 "File: "+fileName			DoUpdate		// make sure graph updated before printing			if (wantToPrint == 1)				PrintGraphs/R Graphplot(2, 2, 98, 98)/F=1	// print graph			endif		endif		fileIndex += 1	while (gotFile)									// until TextFile runs out of filesEndMacroMacro SPEloadtest(name,file,path)	String name,file	String path="" // "home"	PauseUpdate; Silent 1	Variable /D ref,lhead,lblock,npoint,offreg,xmin,xmax,dx,skip,fnsub,fexp	Variable/D datatype,dtype,n_poly,ROIinfo,startx,endx,groupx,starty,endy,groupy	Variable avgexp,exposure,exp_sec,lexpos	String xname,ftype	ftype=FileTypeStr()	if (strlen(file)<=0)		Open /D/R/P=$path/T=(ftype) ref		file= S_fileName	endif	print "Reading SPE file information from : ",file		Open /R/P=$path/T=(ftype) ref as file	FsetPos ref,2	FBinRead /B=3/F=2 ref,avgexp	FsetPos ref,4	FBinRead /B=3/F=2 ref,exposure	FsetPos ref,10	FBinRead/B=3/F=4 ref,exp_sec	FsetPos ref,42	FBinRead /B=3/F=2/U ref,npoint	FsetPos ref,108	FBinRead /B=3/F=2 ref,datatype	FSetPos ref,660	FBinRead /B=3/F=3 ref,lexpos	FSetPos ref,1510	FBinRead /B=3/F=2 ref,ROIinfo	FSetPos ref,1512+(ROIinfo-1)*12	FBinRead /B=3/F=2/U ref,startx	FBinRead /B=3/F=2/U ref,endx	FBinRead /B=3/F=2/U ref,groupx	FBinRead /B=3/F=2/U ref,starty	FBinRead /B=3/F=2/U ref,endy	FBinRead /B=3/F=2/U ref,groupy	FSetPos ref,3101	FBinRead /B/F=1 ref,n_poly	Close ref		print avgexp,exposure,exp_sec,lexpos	print npoint,datatype,ROIinfo,n_poly	print startx,endx,groupx,starty,endy,groupy//// read coeffcients for linearization//	GBLoadWave/N=$"coef"/T={4,4}/B/U=6/S=3263/W=1/P=$path file	skip=4100	if(datatype==0)		dtype= 2	else		if(datatype==1)			dtype= 32		else			if(datatype==2)				dtype= 16			else				if(datatype==3)					dtype= 16+64				endif			endif		endif	endif//	print dtype//	GBLoadWave /N=$"dummyywave"/T={(dtype),4}/B/U=(npoint)/S=(skip)/W=1/P=$path file//	SetScale/P x 1,1,"", $dw0EndMacro LoadPLdata2(fileName,pathName,waveName,flag,flag2)	String fileName, pathName="home", waveName	Variable flag=3,flag2=1;	Prompt flag,"channel y data ?",popup,"yes;yes_but_skip;no"	Prompt flag2,"equal wavelength spacing ?", popup,"yes;intepolate;no"	Silent 1; PauseUpDate	String w0,w1,w2,wavenameL	Variable ref,numpoints		if (strlen(fileName)<=0)		Open /D/R/P=$pathName/T="sGBWTEXT" ref		fileName= S_fileName	endif		LoadWave/G/D/A/W/P=$pathName fileName	if(V_flag==0)		return	endif		w0 = GetStrFromList(S_waveNames,1,";")	// wavelength	w1 = GetStrFromList(S_waveNames,2,";")	// channel x	if (flag != 3)		w2 = GetStrFromList(S_waveNames,3,";")	| channel y (only for LIA detection)	endif	if(flag == 2)		KillWaves $w2	endif	if (flag==1)		Sort $w0, $w0, $w1,$w2		WaveStats/Q $w0		SetScale/I x,V_min,V_max,"nm",$w0,$w1,$w2	else		Sort $w0, $w0, $w1		WaveStats/Q $w0		SetScale/I x,V_min,V_max,"nm",$w0,$w1	endif		if(flag2==1)		KillWaves $w0	else if(flag2=2)		numpoints = numpnts($w0)		if(flag==1)			XYtoWave2($w0,$w1,"tempx",numpoints)			XYtoWave2($w0,$w2,"tempy",numpoints)			KillWaves $w0,$w1,$w2			Rename $"tempx",$w1			Rename $"tempy",$w2		else			XYtoWave2($w0,$w1,"tempx",numpoints)			KillWaves $w0,$w1,$w2			Rename $"tempx",$w1		endif	endif	waveNameL="L"+waveName	if (strlen(waveName)<1)		waveName="W"+wname(fileName)		waveNameL="L"+wname(fileName)	endif	print waveName	if(flag==1)		w0=waveName+"_y"		waveName = waveName + "_x"		Rename $w1,$waveName		Rename $w2,$w0	else		Rename $w1,$waveName	endif		Duplicate/O $waveName,dummywave0	if(flag2==2)		Duplicate/O $waveName,dummyxwave		Duplicate/O $waveNameL,dummyywave			endifEnd MacroMacro MultiPLdataLoad2(thePath, wantToPrint,flag,flag2)	String thePath="_New Path_"	Prompt thePath, "Name of path containing text files", popup PathList("*", ";", "")+"_New Path_"	Variable wantToPrint=2	Prompt wantToPrint, "Do you want to print graphs?", popup, "Yes;No"	Variable flag=3,flag2=1	Prompt flag,"channel y data ?",popup,"yes;yes_but_skip;no"	Prompt flag2,"equal wavelength spacing ?", popup,"yes;intepolate;no"//	String ftype="sGBW"	String ftype="TEXT"	|Prompt ftype,"Filetype"		Silent 1		String fileName	Variable fileIndex=0, gotFile		if (CmpStr(thePath, "_New Path_") == 0)		// user selected new path ?		NewPath/O data			// this brings up dialog and creates or overwrites path		thePath = "data"	endif		if(flag2==2)		DoWindow /F Graphplotxy							// make sure Graphplot is front window		if (V_flag == 0)								// Graphplot does not exist?		Make/N=2/D/O dummyxwave0		Make/N=2/D/O dummyywave0			Graphplotxy()									// create it		endif	else		DoWindow /F Graphplot							// make sure Graphplot is front window		if (V_flag == 0)								// Graphplot does not exist?			Make/N=2/D/O dummywave0			Graphplot()									// create it		endif	endif	do		fileName = IndexedFile($thePath,fileIndex,ftype)			// get name of next file in path		gotFile = CmpStr(fileName, "")		if (gotFile)			LoadPLdata2(fileName,thePath,"",flag,flag2)			|LoadWave/G/P=$thePath/O/N=wave fileName		// load the waves from file			Textbox/C/N=tb_file/F=0/A=MT/X=-30/Y=5 "File: "+fileName			DoUpdate		// make sure graph updated before printing			if (wantToPrint == 1)				PrintGraphs/R Graphplot(2, 2, 98, 98)/F=1	// print graph			endif		endif		fileIndex += 1	while (gotFile)									// until TextFile runs out of filesEndMacrofunction/S fileTypeStr()	string platform=IgorInfo(2),extstr	Variable IgorVersion	IgorVersion = str2num(StringFromList(1,StringFromList(0,IgorInfo(0),";"),":"))		if(cmpstr(platform,"Macintosh")==0)		extstr = "sGBWTEXT"	else		if(IgorVersion<4.05)			extstr="????"		else			extstr=".SPE"		endif	endif	return extstrEnd	